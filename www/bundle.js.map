{"version":3,"sources":["node_modules/browser-pack/_prelude.js","www/js/findLongestPalindrome.js","www/js/index.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var longestPalindrome_module = {\n\tfindLongestPalindrome: function (str) {\n\t\tvar reversed = function(str){\n\t\t\treturn str.split('').reverse().join('');\n\t\t};\n\n\t\tvar isPalindrome = function (str){\n\t\t\treturn str === reversed(str);\n\t\t};\n\t\n\t\tvar allPalindromes = function (str){\n\t\t\tvar palindromes = [];\n\t\t\tfor (var ii = 0; ii < str.length; ii++) {\n\t\t\t\tfor(var jj = ii + 2; jj < str.length; jj++){\n\t\t\t\t\tvar sub = str.slice(ii, jj);\n\t\t\t\t\tif ( isPalindrome( sub ) ) {\n\t\t\t\t\t\tpalindromes.push(sub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn palindromes;\n\t\t};\n\t\n\t\tvar returnLongestOf = function(arrayOfStrings) {\n\t\t\tvar watermark = 0;\n\t\t\tfor( var ii = 0; ii < arrayOfStrings.length; ii++) {\n\t\t\t\tif (arrayOfStrings[ii].length > arrayOfStrings[watermark]) {\n\t\t\t\t\twatermark = ii;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn arrayOfStrings[watermark];\n\t\t}\n\t\t\n\t\treturn returnLongestOf( allPalindromes(str) ) || str.charAt(0);\n\t}\n}\n\nmodule.exports = longestPalindrome_module;","var someStrings = [\"aabbaa\", \"xabacd\", \"abbaxcd\", \"dacxcabbbad\",\n\t\t\t\t   \"able was i ere i saw elba aaaabbbaaaaa\", \"dabxcbad\"];\n\nvar findpal = require( './findLongestPalindrome' ).findLongestPalindrome;\n\nconsole.log( findpal( someStrings[4] ) );\n\n//alert(\"foo\");\n"]}